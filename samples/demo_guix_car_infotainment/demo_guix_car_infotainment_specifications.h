/*******************************************************************************/
/*  This file is auto-generated by Azure RTOS GUIX Studio. Do not edit this    */
/*  file by hand. Modifications to this file should only be made by running    */
/*  the Azure RTOS GUIX Studio application and re-generating the application   */
/*  specification file(s). For more information please refer to the Azure RTOS */
/*  GUIX Studio User Guide, or visit our web site at azure.com/rtos            */
/*                                                                             */
/*  GUIX Studio Revision 6.1.0.0                                               */
/*  Date (dd.mm.yyyy):  9.11.2020   Time (hh:mm): 18:06                        */
/*******************************************************************************/


#ifndef _DEMO_GUIX_CAR_INFOTAINMENT_SPECIFICATIONS_H_
#define _DEMO_GUIX_CAR_INFOTAINMENT_SPECIFICATIONS_H_

#include "gx_api.h"

/* Determine if C++ compiler is being used, if so use standard C.              */
#ifdef __cplusplus
extern   "C" {
#endif

/* Define widget ids                                                           */

#define ID_BOTTOM_START 1
#define ID_REWIND 2
#define ID_FORWARD 3
#define ID_VIDEO_SLIDER 4
#define ID_VIDEO_START 5
#define ID_RELOAD 6
#define ID_BUTTON_LOCATION 7
#define ID_BUTTON_PLUS 8
#define ID_BUTTON_MINUS 9
#define ID_BUTTON_GLOBE 10
#define ID_BUTTON_TRAFFIC 11
#define ID_BUTTON_CLOCK 12
#define ID_SPEAKER_MUTE 13
#define ID_SPEAKER_FULL 14
#define ID_SPEAKER_SLIDER 15
#define ID_BTN_DISC 16
#define ID_BTN_RADIO 17
#define ID_BTN_BLUETOOTH 18
#define ID_BTN_AUX 19
#define ID_BTN_PANDORA 20
#define ID_BTN_MP3 21
#define ID_BUTTOM_AM 22
#define ID_BUTTON_INFO 23
#define ID_BUTTON_SLIDER 24
#define ID_BUTTON_SCAN 25
#define ID_BUTTON_SAT 26
#define ID_BUTTON_FM 27
#define ID_CHANNEL_5 28
#define ID_CHANNEL_1 29
#define ID_CHANNEL_2 30
#define ID_CHANNEL_3 31
#define ID_CHANNEL_4 32
#define ID_BUTTON_LEFT 33
#define ID_BUTTON_RIGHT 34
#define ID_BOTTOM_NAVIGATION 35
#define ID_BOTTOM_AUDIO 36
#define ID_BOTTOM_VIDEO 37
#define ID_BOTTOM_VEHICLE 38
#define ID_BOTTOM_PHONE 39
#define ID_BOTTOM_SETTINGS 40
#define ID_BOTTOM_OFF 41
#define ID_TOP_SOUND 42
#define ID_TOP_CAMERA 43
#define ID_TOP_HOME 44


/* Define animation ids                                                        */

#define GX_NEXT_ANIMATION_ID 1


/* Define user event ids                                                       */

#define GX_NEXT_USER_EVENT_ID GX_FIRST_USER_EVENT


/* Declare properties structures for each utilized widget type                 */

typedef struct GX_STUDIO_WIDGET_STRUCT
{
   GX_CHAR *widget_name;
   USHORT  widget_type;
   USHORT  widget_id;
   #if defined(GX_WIDGET_USER_DATA)
   INT   user_data;
   #endif
   ULONG style;
   ULONG status;
   ULONG control_block_size;
   GX_RESOURCE_ID normal_fill_color_id;
   GX_RESOURCE_ID selected_fill_color_id;
   GX_RESOURCE_ID disabled_fill_color_id;
   UINT (*create_function) (GX_CONST struct GX_STUDIO_WIDGET_STRUCT *, GX_WIDGET *, GX_WIDGET *);
   void (*draw_function) (GX_WIDGET *);
   UINT (*event_function) (GX_WIDGET *, GX_EVENT *);
   GX_RECTANGLE size;
   GX_CONST struct GX_STUDIO_WIDGET_STRUCT *next_widget;
   GX_CONST struct GX_STUDIO_WIDGET_STRUCT *child_widget;
   ULONG control_block_offset;
   GX_CONST void *properties;
} GX_STUDIO_WIDGET;

typedef struct
{
    GX_CONST GX_STUDIO_WIDGET *widget_information;
    GX_WIDGET        *widget;
} GX_STUDIO_WIDGET_ENTRY;

typedef struct
{
    GX_RESOURCE_ID normal_pixelmap_id;
    GX_RESOURCE_ID selected_pixelmap_id;
    GX_RESOURCE_ID disabled_pixelmap_id;
} GX_PIXELMAP_BUTTON_PROPERTIES;

typedef struct
{
    GX_RESOURCE_ID normal_pixelmap_id;
    GX_RESOURCE_ID selected_pixelmap_id;
} GX_ICON_PROPERTIES;

typedef struct
{
    int min_val;
    int max_val;
    int current_val;
    int increment;
    GX_VALUE min_travel;
    GX_VALUE max_travel;
    GX_VALUE needle_width;
    GX_VALUE needle_height;
    GX_VALUE needle_inset;
    GX_VALUE needle_hotspot;
    GX_RESOURCE_ID lower_pixelmap;
    GX_RESOURCE_ID upper_pixelmap;
    GX_RESOURCE_ID needle_pixelmap;
} GX_PIXELMAP_SLIDER_PROPERTIES;

typedef struct
{
    GX_RESOURCE_ID string_id;
    GX_RESOURCE_ID font_id;
    GX_RESOURCE_ID normal_text_color_id;
    GX_RESOURCE_ID selected_text_color_id;
    GX_RESOURCE_ID disabled_text_color_id;
} GX_PROMPT_PROPERTIES;

typedef struct
{
    GX_RESOURCE_ID string_id;
    GX_RESOURCE_ID font_id;
    GX_RESOURCE_ID normal_text_color_id;
    GX_RESOURCE_ID selected_text_color_id;
    GX_RESOURCE_ID disabled_text_color_id;
    GX_RESOURCE_ID left_map_id;
    GX_RESOURCE_ID fill_map_id;
    GX_RESOURCE_ID right_map_id;
    GX_RESOURCE_ID selected_left_map_id;
    GX_RESOURCE_ID selected_fill_map_id;
    GX_RESOURCE_ID selected_right_map_id;
} GX_PIXELMAP_PROMPT_PROPERTIES;

typedef struct
{
    GX_RESOURCE_ID wallpaper_id;
} GX_WINDOW_PROPERTIES;

typedef struct
{
   GX_CONST GX_STUDIO_WIDGET *base_info;
   UINT (*base_create_function) (GX_CONST struct GX_STUDIO_WIDGET_STRUCT *, GX_WIDGET *, GX_WIDGET *);
   GX_RECTANGLE size;
} GX_TEMPLATE_PROPERTIES;


/* Declare top-level control blocks                                            */

typedef struct SPEAKER_WINDOW_CONTROL_BLOCK_STRUCT
{
    GX_WINDOW_MEMBERS_DECLARE
    GX_PIXELMAP_BUTTON speaker_window_speaker_mute;
    GX_PIXELMAP_BUTTON speaker_window_speaker_full;
    GX_PIXELMAP_SLIDER speaker_window_speaker_slider;
} SPEAKER_WINDOW_CONTROL_BLOCK;

typedef struct SCREEN_BASE_CONTROL_BLOCK_STRUCT
{
    GX_WINDOW_MEMBERS_DECLARE
    GX_ICON screen_base_logo;
    GX_PIXELMAP_BUTTON screen_base_top_button_sound;
    GX_PIXELMAP_BUTTON screen_base_top_button_camera;
    GX_PIXELMAP_BUTTON screen_base_top_button_home;
} SCREEN_BASE_CONTROL_BLOCK;

typedef struct VIDEO_SCREEN_CONTROL_BLOCK_STRUCT
{
    SCREEN_BASE_CONTROL_BLOCK base;
    GX_WINDOW video_screen_window;
    GX_PIXELMAP_BUTTON video_screen_video_bottom_start;
    GX_PIXELMAP_BUTTON video_screen_menu_icon;
    GX_PIXELMAP_BUTTON video_screen_reload;
    GX_PIXELMAP_BUTTON video_screen_rewind;
    GX_PIXELMAP_BUTTON video_screen_forward;
    GX_PIXELMAP_SLIDER video_screen_video_slider;
    GX_ICON video_screen_video_slider_left;
    GX_ICON video_screen_video_slider_right;
    GX_PROMPT video_screen_play_hour;
    GX_PROMPT video_screen_play_minute;
    GX_PROMPT video_screen_video_hour;
    GX_PROMPT video_screen_video_minute;
    GX_PROMPT video_screen_prompt_19;
    GX_PROMPT video_screen_prompt_19_1;
    GX_PROMPT video_screen_prompt_19_2;
    GX_ICON video_screen_icon_11;
    GX_PIXELMAP_BUTTON video_screen_video_start;
    GX_ICON video_screen_icon_12;
} VIDEO_SCREEN_CONTROL_BLOCK;

typedef struct NAVIGATION_SCREEN_CONTROL_BLOCK_STRUCT
{
    SCREEN_BASE_CONTROL_BLOCK base;
    GX_WINDOW navigation_screen_window_1;
    GX_PIXELMAP_BUTTON navigation_screen_reload;
    GX_PIXELMAP_BUTTON navigation_screen_pixelmap_button_8;
    GX_PIXELMAP_PROMPT navigation_screen_prompt_15;
    GX_PIXELMAP_PROMPT navigation_screen_prompt_15_2;
    GX_PROMPT navigation_screen_prompt_10;
    GX_PROMPT navigation_screen_prompt_14_2;
    GX_PIXELMAP_PROMPT navigation_screen_prompt_15_3;
    GX_ICON navigation_screen_icon_11_1;
    GX_PIXELMAP_BUTTON navigation_screen_button_location;
    GX_PIXELMAP_BUTTON navigation_screen_button_plus;
    GX_PIXELMAP_BUTTON navigation_screen_button_minus;
    GX_PIXELMAP_BUTTON navigation_screen_button_globe;
    GX_PIXELMAP_BUTTON navigation_screen_button_traffic;
    GX_PIXELMAP_BUTTON navigation_screen_button_clock;
    GX_PIXELMAP_BUTTON navigation_screen_button_microphone;
    GX_ICON navigation_screen_globe_active_icon;
    GX_ICON navigation_screen_traffic_active_icon;
} NAVIGATION_SCREEN_CONTROL_BLOCK;

typedef struct CAMERA_SCREEN_CONTROL_BLOCK_STRUCT
{
    SCREEN_BASE_CONTROL_BLOCK base;
    GX_ICON camera_screen_lines;
    GX_ICON camera_screen_arrow;
    GX_PROMPT camera_screen_number;
    GX_PROMPT camera_screen_prompt_13;
    GX_PROMPT camera_screen_prompt_13_1;
    GX_WINDOW camera_screen_menu_window;
    GX_PIXELMAP_BUTTON camera_screen_reload;
    GX_PIXELMAP_BUTTON camera_screen_pixelmap_button_2;
    GX_PIXELMAP_BUTTON camera_screen_pixelmap_button_3;
    GX_PIXELMAP_BUTTON camera_screen_pixelmap_button_4;
    GX_PIXELMAP_BUTTON camera_screen_pixelmap_button_5;
    GX_PIXELMAP_BUTTON camera_screen_pixelmap_button_6;
    GX_ICON camera_screen_icon_9;
} CAMERA_SCREEN_CONTROL_BLOCK;

typedef struct AUDIO_SCREEN_CONTROL_BLOCK_STRUCT
{
    SCREEN_BASE_CONTROL_BLOCK base;
    GX_PROMPT audio_screen_prompt_18;
    GX_PIXELMAP_BUTTON audio_screen_btn_disc;
    GX_PROMPT audio_screen_disc_prompt;
    GX_ICON audio_screen_disc_icon;
    GX_PIXELMAP_BUTTON audio_screen_btn_radio;
    GX_PROMPT audio_screen_radio_prompt;
    GX_ICON audio_screen_radio_icon;
    GX_PIXELMAP_BUTTON audio_screen_btn_bluetooth;
    GX_PROMPT audio_screen_bluetooth_prompt;
    GX_ICON audio_screen_blue_tooth_icon;
    GX_PIXELMAP_BUTTON audio_screen_btn_aux;
    GX_PROMPT audio_screen_aux_prompt;
    GX_ICON audio_screen_aux_icon;
    GX_PIXELMAP_BUTTON audio_screen_btn_pandora;
    GX_PROMPT audio_screen_pandora_prompt;
    GX_ICON audio_screen_pandora_icon;
    GX_PIXELMAP_BUTTON audio_screen_btn_mp3;
    GX_PROMPT audio_screen_mp3_prompt;
    GX_ICON audio_screen_mp3_icon;
    GX_WINDOW audio_screen_radio_window;
    GX_PIXELMAP_BUTTON audio_screen_reload;
    GX_PIXELMAP_BUTTON audio_screen_pixelmap_button;
    GX_PIXELMAP_BUTTON audio_screen_button_am;
    GX_PROMPT audio_screen_button_am_label;
    GX_PIXELMAP_BUTTON audio_screen_button_info;
    GX_ICON audio_screen_button_info_icon;
    GX_PIXELMAP_BUTTON audio_screen_button_slider;
    GX_ICON audio_screen_button_slider_icon;
    GX_PIXELMAP_BUTTON audio_screen_button_scan;
    GX_PROMPT audio_screen_button_scan_label;
    GX_PIXELMAP_BUTTON audio_screen_button_sat;
    GX_PROMPT audio_screen_button_sat_label;
    GX_PIXELMAP_BUTTON audio_screen_button_fm;
    GX_PROMPT audio_screen_button_fm_label;
    GX_WINDOW audio_screen_am_fm_window;
    GX_PIXELMAP_BUTTON audio_screen_channel_1;
    GX_ICON audio_screen_channel_1_icon;
    GX_PROMPT audio_screen_prompt_15_1;
    GX_PROMPT audio_screen_channel_1_label;
    GX_PIXELMAP_BUTTON audio_screen_channel_2;
    GX_ICON audio_screen_channel_2_icon;
    GX_PROMPT audio_screen_prompt_17_1;
    GX_PROMPT audio_screen_channel_2_label;
    GX_PIXELMAP_BUTTON audio_screen_channel_3;
    GX_ICON audio_screen_channel_3_icon;
    GX_PROMPT audio_screen_prompt_16_1;
    GX_PROMPT audio_screen_channel_3_label;
    GX_PIXELMAP_BUTTON audio_screen_channel_4;
    GX_ICON audio_screen_channel_4_icon;
    GX_PROMPT audio_screen_prompt_14_1;
    GX_PROMPT audio_screen_channel_4_label;
    GX_PIXELMAP_BUTTON audio_screen_channel_5;
    GX_ICON audio_screen_channel_5_icon;
    GX_PROMPT audio_screen_prompt_10;
    GX_PROMPT audio_screen_channel_5_label;
    GX_PIXELMAP_BUTTON audio_screen_button_left;
    GX_PIXELMAP_BUTTON audio_screen_button_right;
    GX_PROMPT audio_screen_wave_value;
    GX_PROMPT audio_screen_channel_name;
    GX_PROMPT audio_screen_mhz_flag;
    GX_PROMPT audio_screen_hour;
    GX_PROMPT audio_screen_minute;
    GX_PROMPT audio_screen_down_dot;
    GX_PROMPT audio_screen_up_dot;
    GX_PROMPT audio_screen_am_pm;
} AUDIO_SCREEN_CONTROL_BLOCK;

typedef struct MAIN_SCREEN_CONTROL_BLOCK_STRUCT
{
    SCREEN_BASE_CONTROL_BLOCK base;
    GX_PROMPT main_screen_date;
    GX_PROMPT main_screen_time_hour;
    GX_PROMPT main_screen_time_minute;
    GX_ICON main_screen_vehicle_icon;
    GX_ICON main_screen_car_light_left;
    GX_ICON main_screen_car_light_right;
    GX_PIXELMAP_BUTTON main_screen_button_navigation;
    GX_ICON main_screen_icon_3;
    GX_PROMPT main_screen_prompt_4;
    GX_PIXELMAP_BUTTON main_screen_button_audio;
    GX_ICON main_screen_icon_4;
    GX_PROMPT main_screen_prompt_3;
    GX_PIXELMAP_BUTTON main_screen_button_video;
    GX_ICON main_screen_icon_5;
    GX_PROMPT main_screen_prompt_6;
    GX_PIXELMAP_BUTTON main_screen_button_vehicle;
    GX_ICON main_screen_icon_6;
    GX_PROMPT main_screen_prompt_5;
    GX_PIXELMAP_BUTTON main_screen_button_phone;
    GX_ICON main_screen_icon_7;
    GX_PROMPT main_screen_prompt_8;
    GX_PIXELMAP_BUTTON main_screen_button_settings;
    GX_ICON main_screen_icon_8;
    GX_PROMPT main_screen_prompt_7;
    GX_PIXELMAP_BUTTON main_screen_button_off;
    GX_ICON main_screen_icon_10_1;
    GX_PROMPT main_screen_button_off_text;
    GX_PROMPT main_screen_T_flag;
    GX_PROMPT main_screen_T_current_value;
    GX_ICON main_screen_weather_icon;
    GX_PROMPT main_screen_weather_label;
    GX_PROMPT main_screen_T_hi_label;
    GX_PROMPT main_screen_T_hi_value;
    GX_PROMPT main_screen_T_low_label;
    GX_PROMPT main_screen_T_low_value;
    GX_PROMPT main_screen_vehicle_label_2;
    GX_PROMPT main_screen_vehicle_label_1;
    GX_ICON main_screen_up_dot;
    GX_ICON main_screen_down_dot;
} MAIN_SCREEN_CONTROL_BLOCK;

typedef struct VEHICLE_SCREEN_CONTROL_BLOCK_STRUCT
{
    SCREEN_BASE_CONTROL_BLOCK base;
    GX_ICON vehicle_screen_icon_1;
    GX_PIXELMAP_BUTTON vehicle_screen_reload;
    GX_PIXELMAP_BUTTON vehicle_screen_pixelmap_button_1;
    GX_PROMPT vehicle_screen_prompt;
    GX_PROMPT vehicle_screen_prompt_1;
    GX_PROMPT vehicle_screen_prompt_2;
    GX_PROMPT vehicle_screen_prompt_10;
    GX_PROMPT vehicle_screen_prompt_10_1;
    GX_PROMPT vehicle_screen_prompt_10_2;
    GX_PROMPT vehicle_screen_prompt_10_3;
    GX_PROMPT vehicle_screen_prompt_10_4;
    GX_PROMPT vehicle_screen_prompt_11;
    GX_PROMPT vehicle_screen_prompt_11_1;
    GX_RADIAL_PROGRESS_BAR vehicle_screen_radial_progress_bar;
    GX_PROMPT vehicle_screen_week;
    GX_PROMPT vehicle_screen_month;
    GX_PROMPT vehicle_screen_day;
    GX_PROGRESS_BAR vehicle_screen_engine_oil;
    GX_PROMPT vehicle_screen_engine_oil_value;
    GX_PROGRESS_BAR vehicle_screen_transmission;
    GX_PROMPT vehicle_screen_transmission_value;
    GX_PROGRESS_BAR vehicle_screen_power_steering;
    GX_PROMPT vehicle_screen_power_steering_value;
    GX_PROGRESS_BAR vehicle_screen_coolant;
    GX_PROMPT vehicle_screen_coolant_value;
    GX_PROGRESS_BAR vehicle_screen_brakes;
    GX_PROMPT vehicle_screen_brakes_value;
    GX_PROMPT vehicle_screen_engine_oil_label;
    GX_PROMPT vehicle_screen_transmission_label;
    GX_PROMPT vehicle_screen_power_steering_label;
    GX_PROMPT vehicle_screen_coolant_label;
    GX_PROMPT vehicle_screen_brakes_label;
    GX_PROMPT vehicle_screen_windshield_washer_value;
    GX_PROMPT vehicle_screen_battery_value;
    GX_PROMPT vehicle_screen_air_filter_value;
    GX_PROMPT vehicle_screen_brakes_F_value;
    GX_PROMPT vehicle_screen_brakes_R_value;
    GX_PROMPT vehicle_screen_tire_pressure_value_1;
    GX_PROMPT vehicle_screen_tire_pressure_value_2;
    GX_PROMPT vehicle_screen_tire_pressure_value_3;
    GX_PROMPT vehicle_screen_tire_pressure_value_4;
    GX_PROMPT vehicle_screen_brakes_F_label;
    GX_PROMPT vehicle_screen_brakes_R_label;
    GX_PROMPT vehicle_screen_prompt_12_4;
    GX_PROMPT vehicle_screen_prompt_12_5;
    GX_PROMPT vehicle_screen_prompt_12_6;
    GX_PROMPT vehicle_screen_prompt_12_7;
    GX_PROMPT vehicle_screen_prompt_12_8;
    GX_PROMPT vehicle_screen_prompt_12_9;
    GX_ICON vehicle_screen_icon;
    GX_ICON vehicle_screen_icon_2;
    GX_PROMPT vehicle_screen_prompt_12;
    GX_PROMPT vehicle_screen_hour;
    GX_PROMPT vehicle_screen_minute;
    GX_PROMPT vehicle_screen_am_pm;
    GX_PROMPT vehicle_screen_down_dot;
    GX_PROMPT vehicle_screen_up_dot;
    GX_ICON vehicle_screen_icon_10;
    GX_ICON vehicle_screen_icon_10_2;
    GX_ICON vehicle_screen_icon_10_3;
    GX_ICON vehicle_screen_icon_10_4;
    GX_ICON vehicle_screen_icon_10_5;
    GX_ICON vehicle_screen_icon_10_6;
    GX_ICON vehicle_screen_icon_10_7;
    GX_ICON vehicle_screen_icon_10_8;
} VEHICLE_SCREEN_CONTROL_BLOCK;


/* extern statically defined control blocks                                    */

#ifndef GUIX_STUDIO_GENERATED_FILE
extern VIDEO_SCREEN_CONTROL_BLOCK video_screen;
extern NAVIGATION_SCREEN_CONTROL_BLOCK navigation_screen;
extern CAMERA_SCREEN_CONTROL_BLOCK camera_screen;
extern SPEAKER_WINDOW_CONTROL_BLOCK speaker_window;
extern AUDIO_SCREEN_CONTROL_BLOCK audio_screen;
extern MAIN_SCREEN_CONTROL_BLOCK main_screen;
extern VEHICLE_SCREEN_CONTROL_BLOCK vehicle_screen;
extern SCREEN_BASE_CONTROL_BLOCK screen_base;
#endif

/* Declare event process functions, draw functions, and callback functions     */

UINT video_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
VOID video_screen_draw(GX_WINDOW *widget);
UINT navigation_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
VOID navigation_screen_draw(GX_WINDOW *widget);
UINT camera_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
VOID camera_screen_draw(GX_WINDOW *widget);
UINT speaker_window_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
UINT audio_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
VOID audio_screen_draw(GX_WINDOW *widget);
VOID audio_screen_pixelmap_button_draw(GX_PIXELMAP_BUTTON *widget);
UINT radio_window_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
UINT main_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
VOID main_screen_draw(GX_WINDOW *widget);
VOID prompt_alpha_draw(GX_PROMPT *widget);
VOID icon_alpha_draw(GX_ICON *widget);
VOID car_light_icon_draw(GX_ICON *widget);
VOID custom_bottom_button_draw(GX_PIXELMAP_BUTTON *widget);
UINT vehicle_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);
VOID vehicle_screen_draw(GX_WINDOW *widget);
UINT base_screen_event_process(GX_WINDOW *widget, GX_EVENT *event_ptr);

/* Declare the GX_STUDIO_DISPLAY_INFO structure                                */


typedef struct GX_STUDIO_DISPLAY_INFO_STRUCT 
{
    GX_CONST GX_CHAR *name;
    GX_CONST GX_CHAR *canvas_name;
    GX_CONST GX_THEME **theme_table;
    GX_CONST GX_STRING **language_table;
    USHORT   theme_table_size;
    USHORT   language_table_size;
    UINT     string_table_size;
    UINT     x_resolution;
    UINT     y_resolution;
    GX_DISPLAY *display;
    GX_CANVAS  *canvas;
    GX_WINDOW_ROOT *root_window;
    GX_COLOR   *canvas_memory;
    ULONG      canvas_memory_size;
    USHORT     rotation_angle;
} GX_STUDIO_DISPLAY_INFO;


/* Declare Studio-generated functions for creating top-level widgets           */

UINT gx_studio_pixelmap_button_create(GX_CONST GX_STUDIO_WIDGET *info, GX_WIDGET *control_block, GX_WIDGET *parent);
UINT gx_studio_icon_create(GX_CONST GX_STUDIO_WIDGET *info, GX_WIDGET *control_block, GX_WIDGET *parent);
UINT gx_studio_pixelmap_slider_create(GX_CONST GX_STUDIO_WIDGET *info, GX_WIDGET *control_block, GX_WIDGET *parent);
UINT gx_studio_progress_bar_create(GX_CONST GX_STUDIO_WIDGET *info, GX_WIDGET *control_block, GX_WIDGET *parent);
UINT gx_studio_radial_progress_bar_create(GX_CONST GX_STUDIO_WIDGET *info, GX_WIDGET *control_block, GX_WIDGET *parent);
UINT gx_studio_prompt_create(GX_CONST GX_STUDIO_WIDGET *info, GX_WIDGET *control_block, GX_WIDGET *parent);
UINT gx_studio_pixelmap_prompt_create(GX_CONST GX_STUDIO_WIDGET *info, GX_WIDGET *control_block, GX_WIDGET *parent);
UINT gx_studio_window_create(GX_CONST GX_STUDIO_WIDGET *info, GX_WIDGET *control_block, GX_WIDGET *parent);
UINT gx_studio_template_create(GX_CONST GX_STUDIO_WIDGET *info, GX_WIDGET *control_block, GX_WIDGET *parent);
GX_WIDGET *gx_studio_widget_create(GX_BYTE *storage, GX_CONST GX_STUDIO_WIDGET *definition, GX_WIDGET *parent);
UINT gx_studio_named_widget_create(char *name, GX_WIDGET *parent, GX_WIDGET **new_widget);
UINT gx_studio_display_configure(USHORT display, UINT (*driver)(GX_DISPLAY *), GX_UBYTE language, USHORT theme, GX_WINDOW_ROOT **return_root);

/* Determine if a C++ compiler is being used.  If so, complete the standard
  C conditional started above.                                                 */
#ifdef __cplusplus
}
#endif

#endif                                       /* sentry                         */
